# 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Cкрипт исполнения обмена элементов списка для четных
# (например 6) и нечетных (например 5) элементов списка.

def swap_neighboring_elements(input_list):
    for i in range(0, len(input_list) - 1, 2):
        input_list[i], input_list[i + 1] = input_list[i + 1], input_list[i]

    return input_list


# Обмен для четного количества элементов
even_list = [10, 20, 30, 40, 50, 60]
print("Все элементы списка (четное количество):", even_list)
result_even = swap_neighboring_elements(even_list)
print("Результирующий ЧЕТНЫЙ список после обмена значениями соседних элементов:", result_even)

# Обмен для нечетного количества элементов
odd_list = [10, 20, 30, 40, 50]
print("\nВсе элементы списка (нечетное количество):", odd_list)
result_odd = swap_neighboring_elements(odd_list)
print("Результирующий НЕЧЕТНЫЙ список после обмена значениями соседних элементов:", result_odd)

# Обмен для четного количества элементов
even_list = [10, 20, 30, 40, 50, 60]
print("Все элементы списка (четное количество):", even_list)
result_even = swap_neighboring_elements(even_list)
print("Результирующий ЧЕТНЫЙ список после обмена значениями соседних элементов:", result_even)

# Обмен для нечетного количества элементов
odd_list = [10, 20, 30, 40, 50]
print("\nВсе элементы списка (нечетное количество):", odd_list)
result_odd = swap_neighboring_elements(odd_list)
print("Результирующий НЕЧЕТНЫЙ список после обмена значениями соседних элементов:", result_odd)

# Обмен для четного количества элементов
even_list = [10, 20, 30, 40, 50, 60]
print("Все элементы списка (четное количество):", even_list)
result_even = swap_neighboring_elements(even_list)
print("Результирующий ЧЕТНЫЙ список после обмена значениями соседних элементов:", result_even)

# Обмен для нечетного количества элементов
odd_list = [10, 20, 30, 40, 50]
print("\nВсе элементы списка (нечетное количество):", odd_list)
result_odd = swap_neighboring_elements(odd_list)
print("Результирующий НЕЧЕТНЫЙ список после обмена значениями соседних элементов:", result_odd)