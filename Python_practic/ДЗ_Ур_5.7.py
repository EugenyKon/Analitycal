"""
    7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме:
    название, форма собственности, выручка, издержки.
    Пример строки файла: firm_1 ООО 10000 5000.

    Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
    Если фирма получила убытки, в расчет средней прибыли ее не включать.

    Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
    Если фирма получила убытки, также добавить ее в словарь (со значением убытков).

    Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
    Итоговый список сохранить в виде json-объекта в соответствующий файл.

    Пример json-объекта:
    [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

    Подсказка: использовать менеджеры контекста.
"""

# Импорт модуля json для работы с JSON-файлами
import json

# Инициализация списка report для хранения информации о фирмах и их прибылях
report = []

# Открытие файла 'task07.txt' для чтения в режиме UTF-8
with open('task07.txt', 'r', encoding='UTF-8') as file:
    # Чтение всего содержимого файла в переменную text
    text = file.read()

    # Возврат указателя чтения на начало файла
    file.seek(0)

    # Инициализация словаря profits для хранения прибыли каждой компании и переменной profit_sum для суммирования прибыли
    profits = {}
    profit_sum = 0

    # Построчное чтение файла
    for row in file:
        # Разделение строки на отдельные части: название, форма собственности, выручка, издержки
        items = row.split(' ')

        # Вычисление прибыли компании и обновление словаря profits
        profit = int(items[2]) - int(items[3])
        if profit > 0:
            profits.update({items[0]: profit})
            profit_sum += profit

    # Добавление словаря profits и словаря со средней прибылью в список report
    report.append(profits)
    report.append({'average_profit': (profit_sum / len(profits))})

# Открытие файла 'task07.json.tmp' для записи JSON-объекта
with open('task07.json.tmp', 'w', encoding='UTF-8') as json_file:
    # Запись списка report в виде JSON-объекта
    json.dump(report, json_file, ensure_ascii=False)

# Преобразование списка report в JSON-строку
json_report = json.dumps(report, ensure_ascii=False)

# Вывод исходного содержимого файла
print(f"Исходный файл:\n{text}\n")
# Вывод списка с фирмами и их прибылями, а также словаря со средней прибылью
print(f"Список:\n{report}\n")
# Вывод JSON-объекта
print(f"json-объект:\n{json_report}")

#_________________________________
#Результаты вычислений
# Исходный файл:
# Кодак ООО 10000 5000
# Прибой ЗАО 50000 0
# Прогресс ПАО 10000 50000
# Вишня ООО 35000 15000
# Фауст НКО 66000 66666
#
# Список:
# [{'Кодак': 5000, 'Прибой': 50000, 'Вишня': 20000}, {'average_profit': 25000.0}]
#
# json-объект:
# [{"Кодак": 5000, "Прибой": 50000, "Вишня": 20000}, {"average_profit": 25000.0}]