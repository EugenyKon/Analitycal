"""
2. Реализовать проект расчета суммарного расхода ткани на производство одежды.
Основная сущность (класс) этого проекта — одежда, которая может иметь определенное название.
К типам одежды в этом проекте относятся пальто и костюм. У этих типов одежды существуют параметры:
размер (для пальто) и рост (для костюма). Это могут быть обычные числа: V и H, соответственно.
Для определения расхода ткани по каждому типу одежды использовать формулы: для пальто (V/6.5 + 0.5),
для костюма (2 * H + 0.3). Проверить работу этих методов на реальных данных.
Реализовать общий подсчет расхода ткани.
Проверить на практике полученные на этом уроке знания: реализовать абстрактные классы
для основных классов проекта,
проверить на практике работу декоратора @property.
"""

from abc import ABC, abstractmethod  # Импорт необходимых модулей

class Clothes(ABC): # Определение абстрактного класса Clothes, который наследуется от ABC
    def __init__(self, name: str): # Инициализация класса с параметром name
        self.name = name  # Присвоение переданного имени

    @abstractmethod  # Декоратор для обозначения абстрактного метода
    def fabric_consumption(self):  # Абстрактный метод для расчета расхода ткани
        pass

class Coat(Clothes):  # Определение класса Coat, который наследуется от Clothes
    def __init__(self, name: str, size: int): # Инициализация класса с параметрами name и size
        self.size = size  # Присвоение переданного размера
        super().__init__(name)  # Вызов конструктора родительского класса с передачей имени

    @property  # Декоратор для создания свойства
    def fabric_consumption(self):  # Метод для расчета расхода ткани в пальто
        return round(2 * self.size + 0.5, 2)   # Формула расчета расхода ткани

class Suit(Clothes):  # Определение класса Suit, который наследуется от Clothes
    def __init__(self, name: str, height: int):  # Инициализация класса с параметрами name и height
        self.height = height   # Присвоение переданного роста
        super().__init__(name)   # Вызов конструктора родительского класса с передачей имени

    @property   # Декоратор для создания свойства
    def fabric_consumption(self):  # Метод для расчета расхода ткани в костюме
        return round(2 * self.height + 0.7, 2)   # Формула расчета расхода ткани

if __name__ == '__main__':    # Основной блок исполнения программы
    green_coat = Coat('Зеленое махровое пальто, зима-лето 2020', 56)  # Создание экземпляра класса Coat
    yellow_suit = Suit('Желтный двубортный костюм с воланом', 45)   # Создание экземпляра класса Suit


    print("расход ткани для пальто:")
    print(green_coat.fabric_consumption)  # Вывод расхода ткани для пальто
    print("расход ткани для костюма:")
    print(yellow_suit.fabric_consumption)  # Вывод расхода ткани для костюма


# ________________________________
# результаты вычислений
# расход ткани для пальто:
# 112.5
# расход ткани для костюма:
# 90.7