"""
    3. Реализовать программу работы с органическими клетками. Необходимо создать класс Клетка.
    В его конструкторе инициализировать параметр, соответствующий количеству клеток (целое число).
    В классе должны быть реализованы методы перегрузки арифметических операторов: сложение (__add__()),
    вычитание (__sub__()), умножение (__mul__()), деление (__truediv__()).Данные методы должны применяться
    только к клеткам и выполнять увеличение, уменьшение, умножение и обычное (не целочисленное) деление клеток,
    соответственно. В методе деления должно осуществляться округление значения до целого числа.

    Сложение. Объединение двух клеток.
    При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.

    Вычитание. Участвуют две клетки. Операцию необходимо выполнять только если разность
    количества ячеек двух клеток больше нуля, иначе выводить соответствующее сообщение.

    Умножение. Создается общая клетка из двух. Число ячеек общей клетки определяется как
    произведение количества ячеек этих двух клеток.

    Деление. Создается общая клетка из двух. Число ячеек общей клетки определяется
    как целочисленное деление количества ячеек этих двух клеток.

    В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
    Данный метод позволяет организовать ячейки по рядам.

    Метод должен возвращать строку вида *****\n*****\n*****...,
    где количество ячеек между \n равно переданному аргументу.
    Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.

    Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5.
    Тогда метод make_order() вернет строку: *****\n*****\n**.

    Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
    Тогда метод make_order() вернет строку: *****\n*****\n*****.
"""

# скрипт содержит класс Клетка с перегруженными операторами для осуществления
# различных операций над клетками, а также методом make_order() для формирования
# ряда ячеек в клетке. Создаются две клетки, над которыми проводятся
# операции и выводятся результаты.

# Определение класса Клетка
class Клетка:
    # Конструктор класса, принимает количество ячеек клетки
    def __init__(self, количество_ячеек: int):
        # Проверка на отрицательное или нулевое количество ячеек
        if количество_ячеек <= 0:
            raise ValueError("Количество ячеек должно быть больше нуля.")
        self.количество_ячеек = количество_ячеек

    # Перегрузка оператора сложения для клеток
    def __add__(self, другая_клетка):
        return Клетка(self.количество_ячеек + другая_клетка.количество_ячеек)

    # Перегрузка оператора вычитания для клеток
    def __sub__(self, другая_клетка):
        разность = self.количество_ячеек - другая_клетка.количество_ячеек
        if разность > 0:
            return Клетка(разность)
        else:
            raise ValueError("Ошибка! Разность количества ячеек клеток меньше или равно нулю.")

    # Перегрузка оператора умножения для клеток
    def __mul__(self, другая_клетка):
        return Клетка(self.количество_ячеек * другая_клетка.количество_ячеек)

    # Перегрузка оператора деления для клеток
    def __truediv__(self, другая_клетка):
        if другая_клетка.количество_ячеек == 0:
            raise ValueError("Ошибка! Деление на ноль.")
        return Клетка(self.количество_ячеек // другая_клетка.количество_ячеек)

    # Метод для формирования ряда ячеек в клетке
    def make_order(self, ячеек_в_ряду: int):
        rows = self.количество_ячеек // ячеек_в_ряду
        remainder = self.количество_ячеек % ячеек_в_ряду
        result = "*" * ячеек_в_ряду + "\n"
        result = result * rows + "*" * remainder
        return result

# Создание двух клеток
клетка1 = Клетка(12)
клетка2 = Клетка(15)

# Проверка операций над клетками
сумма_клеток = клетка1 + клетка2
разность_клеток = клетка2 - клетка1
умножение_клеток = клетка1 * клетка2
деление_клеток = клетка2 / клетка1

# Вывод результатов операций
print("Сумма клеток:", сумма_клеток.количество_ячеек)
print("Разность клеток:", разность_клеток.количество_ячеек)
print("Произведение клеток:", умножение_клеток.количество_ячеек)
print("Деление клеток:", деление_клеток.количество_ячеек)

# Проверка метода make_order()
print("Клетка 1 с порядком:")
print(клетка1.make_order(5))
print("Клетка 2 с порядком:")
print(клетка2.make_order(5))

# _____________________________________
# результаты вычислений
# Сумма клеток: 27
# Разность клеток: 3
# Произведение клеток: 180
# Деление клеток: 1
# Клетка 1 с порядком:
# *****
# *****
# **
# Клетка 2 с порядком:
# *****
# *****
# *****