"""
    5. Реализовать класс Stationery (канцелярская принадлежность).
    Определить в нем атрибут title (название) и метод draw (отрисовка).
    Метод выводит сообщение “Запуск отрисовки.”
    Создать три дочерних класса Pen (ручка), Pencil (карандаш), Handle (маркер).
    В каждом из классов реализовать переопределение метода draw.
    Для каждого из классов методы должен выводить уникальное сообщение.
    Создать экземпляры классов и проверить, что выведет описанный метод для каждого экземпляра.
"""

# Создаем базовый класс Stationery (канцелярская принадлежность)
class Stationery:
    def __init__(self, title):
        # Инициализация атрибута title (название)
        self.title = title

    # Метод draw (отрисовка) выводит сообщение о запуске отрисовки
    def draw(self):
        print(f"Запуск отрисовки {self.title}")


# Создаем дочерний класс Pen (ручка), наследуется от Stationery
class Pen(Stationery):
    # Переопределение метода draw для Pen
    def draw(self):
        print(f"Запуск отрисовки ручкой {self.title}")


# Создаем дочерний класс Pencil (карандаш), наследуется от Stationery
class Pencil(Stationery):
    # Переопределение метода draw для Pencil
    def draw(self):
        print(f"Запуск отрисовки карандашем {self.title}")


# Создаем дочерний класс Handle (маркер), наследуется от Stationery
class Handle(Stationery):
    # Переопределение метода draw для Handle
    def draw(self):
        print(f"Запуск отрисовки маркером {self.title}")


# Создаем экземпляры каждого класса и вызываем метод draw для каждого экземпляра
stationery = Stationery('Гусиное перо')
stationery.draw()

pen = Pen('Гелевая')
pen.draw()

pencil = Pencil('Учебный')
pencil.draw()

handle = Handle('Для белой доски')
handle.draw()

#_______________________________
# Реализация вычислений
# Запуск отрисовки Гусиное перо
# Запуск отрисовки ручкой Гелевая
# Запуск отрисовки карандашем Учебный
# Запуск отрисовки маркером Для белой доски